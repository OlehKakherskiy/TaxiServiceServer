<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:repository="http://www.springframework.org/schema/data/repository"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <beans profile="inMem">
        <context:component-scan base-package="ua.kpi.mobiledev.repository.inmem"/>
        <bean id="resetPasswordRepository" class="ua.kpi.mobiledev.repository.ResetPasswordRepositoryImpl">
            <property name="redisTemplate" ref="redisTemplate"/>
            <property name="expireDurationInMs" value="${security.resetPasswordCodeAlive}"/>
        </bean>
        <bean id="orderRepository" class="ua.kpi.mobiledev.repository.inmem.InMemOrderRepository">
            <property name="dbMock" ref="dbMock"/>
        </bean>
        <bean id="notificationTokenRepository" class="ua.kpi.mobiledev.repository.NotificationTokenRepositoryImpl"
              autowire="byType"/>
    </beans>

    <beans profile="prod;local">
        <context:property-placeholder system-properties-mode="OVERRIDE" location="WEB-INF/jdbc.properties"
                                      ignore-unresolvable="true"/>
        <jpa:repositories base-package="ua.kpi.mobiledev.repository" entity-manager-factory-ref="entityManagerFactory"
                          enable-default-transactions="false">
            <repository:exclude-filter type="regex" expression="ua\.kpi\.mobiledev\.repository\.inmem\.*"/>
        </jpa:repositories>

        <context:component-scan base-package="ua.kpi.mobiledev.repository">
            <context:exclude-filter type="regex" expression="ua\.kpi\.mobiledev\.repository\.inmem\.*"/>
        </context:component-scan>

        <bean id="securityDetailsRepository"
              class="ua.kpi.mobiledev.web.security.service.SecurityDetailsRepositoryImpl"/>

        <bean name="entityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="persistenceProviderClass" value="org.hibernate.jpa.HibernatePersistenceProvider"/>
            <property name="packagesToScan">
                <list>
                    <value>ua.kpi.mobiledev.domain</value>
                    <value>ua.kpi.mobiledev.web.security.model</value>
                </list>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">${dialect}</prop>
                    <prop key="hibernate.show_sql">${showSql}</prop>
                    <prop key="hibernate.format_sql">${formatSql}</prop>
                    <prop key="hibernate.validator.fail_fast">${validator.fail_fast}</prop>
                    <prop key="hibernate.connection.provider_class">com.zaxxer.hikari.hibernate.HikariConnectionProvider</prop>
                    <prop key="hibernate.hikari.dataSourceClassName">com.mysql.jdbc.jdbc2.optional.MysqlDataSource</prop>
                    <prop key="hibernate.hikari.dataSource.url">${datasourceUrl}</prop>
                    <prop key="hibernate.hikari.dataSource.user">${user}</prop>
                    <prop key="hibernate.hikari.dataSource.password">${password}</prop>
                    <prop key="hibernate.hikari.dataSource.cachePrepStmts">${cachePrepStmts}</prop>
                    <prop key="hibernate.hikari.dataSource.useServerPrepStmts">${useServerPrepStmts}</prop>
                    <prop key="hibernate.hikari.dataSource.useUnicode">${useUnicode}</prop>
                    <prop key="hibernate.hikari.dataSource.characterEncoding">${characterEncoding}</prop>
                    <prop key="hibernate.hikari.dataSource.prepStmtCacheSize">${prepStmtCacheSize}</prop>
                    <prop key="hibernate.hikari.dataSource.prepStmtCacheSqlLimit">${prepStmtCacheSqlLimit}</prop>
                </props>
            </property>
        </bean>
    </beans>

    <beans xmlns:jdbc="http://www.springframework.org/schema/jdbc"
           xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"
           profile="test">
        <jdbc:embedded-database id="dataSource" type="HSQL">
            <jdbc:script location="db_dump/local_schema_generation.sql"/>
        </jdbc:embedded-database>
    </beans>
</beans>